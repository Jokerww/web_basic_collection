/* 1，元素选择器:最常见的选择器就是元素选择器，文档的元素就是最基本的选择器 如 h1 p等
   2，选择器分组：同时给多个元素标签设置样式  语法为： a,h1{}
   3，通配符 * 为所有的元素添加样式  *{}
   4，类选择器：
		类选择器允许以一种独立于文档元素的方式来指定样式： .class名{} 如 .div1{}
		可结合元素选择器使用： 元素名.元素类名{} 如 p.p1{}
		多类选择器：一个元素可拥有多个类名 并可以与其他元素的类名重复 
					重复时将拥有其他元素以类名为选择器设置的样式 
	5，ID选择器：利用元素的ID为元素添加样式  #ID名{}  
			注意：ID名不可以重复 有异与类选择器
				  ID选择器不能结合使用
				  当使用js时，需要用到ID
	6,属性选择器：利用元素的属性来设置样式  [属性名]{} 
				 可利用属性值选择器来缩小属性选择的范围 需要准确的给出值  [属性名=值]{}
				 根据属性值选择一定的范围 具备该值1的都可以设置样式，
						这里的值1很模糊 只要属性值里边含有这个值1即可 [属性名 ~= 值1]
	7,后代选择器：元素1里包含了元素2 称元素2为元素1的后代元素 空格隔开  元素1 元素2{}
				当元素2里包含元素3时  “元素1 元素2 元素3{}” 或 “元素1 元素3{}” 
				来为元素3指定样式，也即是可通过多层直接找到后代元素
				但是 元素1 元素2 {} 只为属于元素2 不属于元素3的内容指定样式
	8,子元素选择器：与后代类似 但只能一层一层的找 元素1>元素2>元素3{} 不能 元素1>元素3{}
					选择了自己的子元素就只会给子元素添加样式 就算有名称相同的后代元素 也不会影响他们
	9，相邻兄弟选择器：可选择紧接在一个元素后的元素，且他们有相同的父元素  元素1+元素2{}
*/

*{
	font-style: italic;  /* 将所有的字体设置成斜体  一般利用通配符设置内外边距*/
}

h2{
	color: #008000;
}

a, h1{
	color: #00FFFF;  /* 同时为多个元素设置样式 */
}

.div1{
	color: #5F9EA0;
	font-style: normal;
}

div.div2{
	font-size: larger;
}

.p1{
	font-size: larger;
}

.p2{
	color: #8A2BE2;
}

.p1.p2{
	font-style: normal;
}

.p11{
	color: #A52A2A;
}
.p22{
	color: chartreuse;  /* 将前一个类选择器的样式覆盖了 */
	font-style: normal;
}

#div1{
	font-size: larger;
	font-style: normal;
}

p strong{
	font-style: normal;  /* 属于strong 但不属于span的内容改变了样式 */
}
/* p strong span{
	color: #0000FF;
} */
p span{
	color: #0000FF;
}

p>strong>span{
	font-size: 30px;
}
/* p>span{
	font-style: normal;  不起作用 错误的表示
} */

li+li{   /* 在同一个父元素的li元素后边的li元素  第一个li元素不会改变样式 */
	color: #A52A2A;  
	font-size: 30px;
}